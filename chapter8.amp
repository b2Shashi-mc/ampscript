%%[
    /* Set the name of the data extension to be used */
    set @dataExtensionName = "My_DataExtension"

    /* Initialize variables for search criteria */
    set @search1Column = "{{column1}}" /* The column used for searching rows to update */
    set @search1Value = "SomeSearchValue" /* The value to search for in @search1Column */
    set @noOfColumnsToSearch = 1 /* Number of columns to search in the data extension */

    /* Dynamic placeholders for update columns and values */
    set @UpdateColumns = "" /* This will store the final list of update columns */
    set @UpdateValues = "" /* This will store the final list of update values */

    /* Loop through the columns array to generate dynamic update columns */
    %%[
    for @i = 2 to RowCount(columns) do
        /* Get the column name and dynamically set placeholders */
        set @UpdateColumn = Column(@i).name
        set @UpdateColumnValue = Concat("UpdatedValue", Subtract(@i, 1))

        /* Append column and value to the update lists */
        if @UpdateColumns == "" then
            set @UpdateColumns = @UpdateColumn
            set @UpdateValues = @UpdateColumnValue
        else
            set @UpdateColumns = Concat(@UpdateColumns, ", ", @UpdateColumn)
            set @UpdateValues = Concat(@UpdateValues, ", ", @UpdateColumnValue)
        endif
    next
    ]%%

    /* Update data in the specified data extension */
    set @isUpdated = UpdateData(@dataExtensionName, @noOfColumnsToSearch, 
                                @search1Column, @search1Value, 
                                @UpdateColumns, @UpdateValues)

    /* Output the result of the UpdateData function */
    Output(v(@isUpdated))
]%%
